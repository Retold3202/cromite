From: csagan5 <32685696+csagan5@users.noreply.github.com>
Date: Sat, 9 May 2020 14:42:37 +0200
Subject: webRTC: do not expose local IP addresses

Ensure that WebRTC never leaks local IP addresses and public IP addresses (useful when using a VPN).

See also:
* https://github.com/bromite/bromite/issues/553
* https://github.com/bromite/bromite/issues/589

Initial Commit: https://github.com/uazo/cromite/commit/8520a538a78949f5a65823954213327503a61cfe#diff-ae809cef83ef37d335039a1cd109be4c56a5099a09aa98ab1afdc0b4f4ab365f (Inherited from Bromite)
Category: Privacy
License: GPL-3.0-only - https://spdx.org/licenses/GPL-3.0-only.html
---
 chrome/browser/ui/browser_ui_prefs.cc                       | 2 +-
 .../peerconnection/peer_connection_dependency_factory.cc    | 6 ++++--
 2 files changed, 5 insertions(+), 3 deletions(-)

diff --git a/chrome/browser/ui/browser_ui_prefs.cc b/chrome/browser/ui/browser_ui_prefs.cc
--- a/chrome/browser/ui/browser_ui_prefs.cc
+++ b/chrome/browser/ui/browser_ui_prefs.cc
@@ -103,7 +103,7 @@ void RegisterBrowserUserPrefs(user_prefs::PrefRegistrySyncable* registry) {
                                 false);
 #endif
   registry->RegisterStringPref(prefs::kWebRTCIPHandlingPolicy,
-                               blink::kWebRTCIPHandlingDefault);
+                               blink::kWebRTCIPHandlingDisableNonProxiedUdp);
   registry->RegisterStringPref(prefs::kWebRTCUDPPortRange, std::string());
   registry->RegisterBooleanPref(prefs::kWebRtcEventLogCollectionAllowed, false);
   registry->RegisterListPref(prefs::kWebRtcLocalIpsAllowedUrls);
diff --git a/third_party/blink/renderer/modules/peerconnection/peer_connection_dependency_factory.cc b/third_party/blink/renderer/modules/peerconnection/peer_connection_dependency_factory.cc
--- a/third_party/blink/renderer/modules/peerconnection/peer_connection_dependency_factory.cc
+++ b/third_party/blink/renderer/modules/peerconnection/peer_connection_dependency_factory.cc
@@ -120,7 +120,9 @@ WebRTCIPHandlingPolicy GetWebRTCIPHandlingPolicy(const String& preference) {
     return kDefaultPublicInterfaceOnly;
   if (preference == kWebRTCIPHandlingDisableNonProxiedUdp)
     return kDisableNonProxiedUdp;
-  return kDefault;
+  if (preference == kWebRTCIPHandlingDefault)
+    return kDefault;
+  return kDisableNonProxiedUdp;
 }
 
 bool IsValidPortRange(uint16_t min_port, uint16_t max_port) {
@@ -857,7 +859,7 @@ PeerConnectionDependencyFactory::CreatePortAllocator(
           break;
       }
 
-      VLOG(3) << "WebRTC routing preferences: "
+      LOG(INFO) << "WebRTC routing preferences: "
               << "policy: " << policy
               << ", multiple_routes: " << port_config.enable_multiple_routes
               << ", nonproxied_udp: " << port_config.enable_nonproxied_udp
--
